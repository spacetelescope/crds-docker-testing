#!/bin/bash
CACHE_SRC=${1:-"cache_volumes"}
DOWNLOAD_CACHE=${2:-0}
SYNC_CACHE=${3:-0}
TMP_CACHE=${4:-""}
TIME=/usr/bin/time

if [[ "${CACHE_SRC}" == "/grp/crds/hst" ]]; then
    exit
fi

if [[ -z $TMP_CACHE ]]; then
    export CRDS_TEST_ROOT="${HOME}/${CACHE_SRC}"
else
    export CRDS_TEST_ROOT="${HOME}/${TMP_CACHE}"
fi

export CRDS_PATH=$CRDS_TEST_ROOT/crds-cache-default-test
export CRDS_TESTING_CACHE=$CRDS_TEST_ROOT/crds-cache-test
source ${HOME}/scripts/hst-crds-config

if [[ $DOWNLOAD_CACHE == 1 ]]; then
    # setup fresh test cache directories similar to crds/setup_test_cache
    if [[ -d $CRDS_TESTING_CACHE ]]; then
        cd $CRDS_TEST_ROOT && rm -rf crds-cache-test
    fi
    mkdir -p ${CRDS_TEST_ROOT}/crds-cache-default-test && cd $CRDS_TEST_ROOT
    git clone https://github.com/spacetelescope/crds-cache-test.git
    cd $DEV_HOME
fi

chmod 755 $CRDS_TEST_ROOT

if [[ $SYNC_CACHE == 1 ]]; then
    resp=`crds list --status`
    status=`echo $resp | cut -f1 -d'='`
    if [[ -z $status ]]; then
        cd ${HOME}/crds && ./install && pip install -e .[submission,test,docs,synphot] 
        pip install --upgrade .["submission","test"] && cd $HOME
    fi
    hstlog=${HOME}/hstsync.log
    cd $CRDS_TEST_ROOT
    set -o pipefail && $TIME --verbose -o $hstlog ${HOME}/scripts/hst-sync

    jwstlog=${HOME}/jwstsync.log
    set -o pipefail && $TIME --verbose -o $jwstlog ${HOME}/scripts/jwst-sync
    cd $HOME
fi
