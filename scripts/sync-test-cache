#!/bin/bash -x
CACHE_SRC=${1:-"cache_volumes"}
DOWNLOAD_CACHE=${2:-0}
SYNC_CACHE=${3:-0}
COMPRESS=${4:-0}
TIME=/usr/bin/time
logfile="${HOME}/sync.log"

if [[ "${CACHE_SRC}" == "/grp/crds/cache" ]]; then
    echo "Readonly cache - skipping"
    exit
fi

export CRDS_TEST_ROOT="${HOME}/${CACHE_SRC}"
if [[ ! -d $CRDS_TEST_ROOT ]]; then
    mkdir -p ${CRDS_TEST_ROOT}
fi
chmod 755 $CRDS_TEST_ROOT
export CRDS_PATH=$CRDS_TEST_ROOT/crds-cache-default-test
export CRDS_TESTING_CACHE=$CRDS_TEST_ROOT/crds-cache-test
source ${HOME}/scripts/hst-crds-config

if [[ $DOWNLOAD_CACHE == 1 ]]; then
    # setup fresh test cache directories similar to crds/setup_test_cache
    if [[ -d $CRDS_TESTING_CACHE ]]; then
        cd $CRDS_TEST_ROOT && rm -rf crds-cache-test
    fi
    mkdir -p ${CRDS_TEST_ROOT}/crds-cache-default-test && cd $CRDS_TEST_ROOT
    git clone https://github.com/spacetelescope/crds-cache-test.git
    cd $DEV_HOME
fi

if [[ $SYNC_CACHE == 1 ]]; then
    resp=`crds list --status`
    status=`echo $resp | cut -f1 -d'='`
    if [[ -z $status ]]; then
        cd ${HOME}/crds && ./install && pip install -e .[submission,test,docs,synphot] 
        pip install --upgrade .["submission","test"] && cd $HOME
    fi
    cd $CRDS_TEST_ROOT
    echo "***** RUNNING HST SYNC *****"
    set -o pipefail && $TIME --verbose -o ${HOME}/hstsync.log ${HOME}/scripts/hst-sync
    hst_sync_exit_status=$?
    echo "HST Sync exit status ${hst_sync_exit_status}"

    echo "***** RUNNING JWST SYNC *****"
    set -o pipefail && $TIME --verbose -o ${HOME}/jwstsync.log ${HOME}/scripts/jwst-sync
    jwst_sync_exit_status=$?
    echo "JWST Sync exit status ${jwst_sync_exit_status}"
    cd $HOME
fi

chmod -R 755 $CRDS_TEST_ROOT

if [[ -d "${HOME}/crds_cache" && "${COMPRESS}" == 1 ]]; then
    if [[ -e "${HOME}/crds_cache.tgz" ]]; then
        rm ${HOME}/crds_cache.tgz
    fi
    echo "Compressing CRDS test cache as crds_cache.tgz"
    tar -czvf crds_cache.tgz crds_cache/
    chmod 777 crds_cache.tgz
    rm -rf crds_cache/
fi